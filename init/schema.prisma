generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("CDB_URL")
}

// mastodon users; you must successfully auth to this ID to see anything
model User {
  id              String      @id    // mastodon ref imp uses integer IDs but is that mandator?
  username        String
  display_name    String?
  avatar          String?
  avatar_static   String?
  header          String?
  header_static   String?
  followers_count Int
  following_count Int
  tweets          Tweet[]
  timeline        TimelineEntry[]
  @@index([id], map: "user_ids")
  @@index([username], map: "usernames")
}

// a 7-day cache of tweets. I refuse to call them toots, and posts is too generic.
model Tweet {
  id              String      @id 
  permalink       String
  text            String
  author          User        @relation(fields:[authorId],references: [id])
  authorId        String      // integer ID from user object
  json            Json        @db.JsonB
  timelineEntry   TimelineEntry[]
}

model TimelineEntry {
  id              String      @id
  seenAt          DateTime    @default(now())
  viewer          User        @relation(fields:[viewerId],references:[id])
  viewerId        String
  tweet           Tweet       @relation(fields:[tweetId],references:[id])
  tweetId         String
}

// might use this for meta-login to multiple accounts?
model Account {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String
  @@index([id], map: "account_ids")
  posts           Post[]
}

model Post {
  id         String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt  DateTime   @default(now())
  title      String?
  slug       String?
  @@index([slug], map: "slugs")
  @@unique([slug])
  body       String?
  published  Boolean    @default(false)
  author     Account    @relation(fields: [authorId], references: [id])
  authorId   String @db.Uuid
}
